daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;
    gzip_proxied any; # Heroku router sends Via header

    server_tokens off;

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
    error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

    # Define a map to allow subdomains of eskihub.com
    map $http_origin $allowed_origin {
        default "";
        "~^https?://([a-z0-9-]+\.eskihub\.com)$" $http_origin;  # Allow any subdomain of eskihub.com
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name 10ax.eskihub.com;
        keepalive_timeout 5;
        client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;

        location / {
            # CORS headers for OPTIONS requests
            if ($request_method = "OPTIONS") {
                add_header 'Access-Control-Allow-Origin' $allowed_origin;  # Use the allowed origin variable
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  # Adjust methods as necessary
                add_header 'Access-Control-Allow-Headers' 'Authorization, Cache-Control';  # Adjust headers as necessary
                add_header 'Access-Control-Max-Age' 7200;
                add_header 'Access-Control-Allow-Credentials' 'true';  # Allow credentials
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass https://10ax.online.tableau.com/;
            proxy_ssl_name '10ax.online.tableau.com';
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header Host '10ax.online.tableau.com';
            proxy_cookie_domain '10ax.online.tableau.com' '10ax.eskihub.com';
        }
    }

    server {
        listen <%= ENV["PORT"] %>;
        server_name dub01.eskihub.com;
        keepalive_timeout 5;
        client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;

        location / {
            # CORS headers for OPTIONS requests
            if ($request_method = "OPTIONS") {
                add_header 'Access-Control-Allow-Origin' $allowed_origin;  # Use the allowed origin variable
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';  # Adjust methods as necessary
                add_header 'Access-Control-Allow-Headers' 'Authorization, Cache-Control';  # Adjust headers as necessary
                add_header 'Access-Control-Max-Age' 7200;
                add_header 'Access-Control-Allow-Credentials' 'true';  # Allow credentials
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass https://dub01.online.tableau.com/;
            proxy_ssl_name 'dub01.online.tableau.com';
            proxy_set_header x-forwarded-host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header Host 'dub01.online.tableau.com';
            proxy_cookie_domain 'dub01.online.tableau.com' 'dub01.eskihub.com';
        }
    }
}
